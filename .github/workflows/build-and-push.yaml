name: CI

on:
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  linting-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Linting
        run: npm run lint

      - name: Prettier
        run: npm run format

      - name: Tests
        run: npm run test

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: linting-and-test
    outputs:
      commit: ${{ steps.push-image.outputs.commit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - if: github.event_name != 'pull_request'
        name: Push Docker Image
        id: push-image
        run: |
          echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          # Get Short commit id
          VERSION=${GITHUB_SHA::8}
          BRANCH=${GITHUB_REF_NAME}

          echo IMAGE_NAME=$IMAGE_NAME
          echo VERSION=$VERSION
          echo BRANCH=$BRANCH

          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION 
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME

          echo "::set-output name=commit::$VERSION"

      - if: github.event_name != 'pull_request'
        name: Publish Deployment Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deployment-artifacts
          path: |
            deployment